== Command Line


=== Installation

Download the latest binary distribution of the command lines tools from the scribble website and unpack the zip file in an appropriate location.

The directory structure within the distribution is:

* bin

The folder containing the scripts for running the scribble tools.

* docs

The folder containing the user guide, developer guide and Java API documentation.

* lib

The jar files used by the scribble command line tools.



=== How To ...

Before running any of the commands, you will need to setup the MODULE_PATH environment variable, to identify which folder (or folders) contain the module definitions. The MODULE_PATH will define a list of directories, separated by the ':' character.

If you don't wish to define the environment variable, then the list of folders can be supplied on the command line, by specfying: -path <directories>


==== Parse and Validate a Scribble Protocol

To parse and validate that a Scribble module is correct, run the following command from the bin folder:

On windows
----
scribble -validate <module>
----

On linux
----
./scribble.sh -validate <module>
----

If any parse or validation errors are detected, then they will be displayed on the console.


==== Project a Global Protocol

To project a Scribble global module to a local module per role, run the following command from the bin folder:

On windows
----
scribble -project <module>
----

On linux
----
./scribble.sh -project <module>
----

If any parse or validation errors are detected, then they will be displayed on the console. Otherwise a local module will be created, at the same location as the global module, for each role defined in the global module.


==== Simulate a Message Trace

To simulate a Scribble protocol, run the following command from the bin folder:

On windows
----
scribble -simulate <traceFile or folder>
----

On linux
----
./scribble.sh -simulate <traceFile or folder>
----

If a trace file is specified, then only that file will be simulated. If a folder is specified, then all trace files within that folder (or sub-folders) will be simulated. If a simulation fails, then it will immediately terminate the command.



