grammar org.scribble.editor.dsl.ScribbleDsl with org.eclipse.xtext.common.Terminals

generate scribbleDsl "http://www.scribble.org/editor/dsl/ScribbleDsl"


Module:
	ModuleDecl (imports+=ImportDecl)* (types+=PayloadTypeDecl)*
		(globals+=GlobalProtocolDecl
//|
//	locals=Localprotocoldecl
		)*
;

ModuleDecl:
	'module' name=ModuleName ';'
;

ModuleName:	
	ID ('.' ID)*
;

ImportDecl:
	ImportModule
|
	ImportMember
;

ImportModule:
	'import' name=ModuleName ( 'as' alias=ID )? ';'
;

ImportMember:
	'from' name=ModuleName 'import' member=ID ( 'as' alias=ID )? ';'
;

PayloadTypeDecl:
	'type' '<' schema=ID '>' type=STRING 'from' location=STRING  'as' alias=ID ';'
;

/**
 * Section 3.5 Message Signatures
 */
MessageOperator:
	ID //(LETTER | DIGIT | UNDERSCORE)+
;

MessageSignature:
//	'(' payload ')'
//|
	operator=ID '(' ( types+=PayloadElement (',' types+=PayloadElement)* )? ')'
;

PayloadElement:
	( name=ID ':' )? type=ID
;


GlobalProtocolDecl:
	'global' 'protocol' name=ID ( '<' parameters+=ParameterDecl (',' parameters+=ParameterDecl)* '>' )?
			'(' roles+=RoleDecl (',' roles+=RoleDecl)* ')' ( block=GlobalProtocolBlock |
				'instantiates' instantiates=ID ( '<' arguments+=Argument (',' arguments+=Argument )* '>' )?
				'(' roleInstantiations+=RoleInstantiation (',' roleInstantiations+=RoleInstantiation)* ')' ';'
			)
;

RoleDecl:
	'role' name=ID ( 'as' alias=ID )?
;

ParameterDecl:
	 'type' name=ID ( 'as' alias=ID )?
|
	 'sig' name=ID ( 'as' alias=ID )?
;



RoleInstantiation:
	name=ID ( 'as' alias=ID )?
;

Argument:
	signature=MessageSignature ( 'as' alias=ID )?
|
	name=ID ( 'as' alias=ID )?
;


/**
 * Section 3.7.3 Global Interaction Sequences and Blocks
 */
GlobalProtocolBlock:
	{GlobalProtocolBlock} '{' (activities+=GlobalInteraction)* '}'
;

GlobalInteraction:
	GlobalMessageTransfer
|
	GlobalChoice
|
	GlobalRecursion
|
	GlobalContinue
|
	GlobalParallel
|
	GlobalInterruptible
|
	GlobalDo
/*|
	globalspawn*/
;


/**
 * Section 3.7.4 Global Message Transfer
 */
GlobalMessageTransfer:
	message=Message 'from' fromRole=ID 'to' toRole+=ID (',' toRole+=ID )* ';'
;

Message:
	MessageSignature
|
	parameter=ID
;


/**
 * Section 3.7.5 Global Choice
 */
GlobalChoice:
	'choice' 'at' role=ID blocks+=GlobalProtocolBlock ('or' blocks+=GlobalProtocolBlock)*
;


/**
 * Section 3.7.6 Global Recursion
 */
GlobalRecursion:
	'rec' label=ID block=GlobalProtocolBlock
;

GlobalContinue:
	'continue' label=ID ';'
;


/**
 * Section 3.7.7 Global Parallel
 */
GlobalParallel:
	'par' blocks+=GlobalProtocolBlock ('and' blocks+=GlobalProtocolBlock)*
;


/**
 * Section 3.7.8 Global Interruptible
 */
GlobalInterruptible:
	'interruptible' ( scope=ID ':' )? block=GlobalProtocolBlock 'with' '{' (interrupts+=GlobalInterrupt)* '}'
;

GlobalInterrupt:
	messages+=Message (',' messages+=Message)* 'by' role=ID ';'
;


/**
 * Section 3.7.9 Global Do
 */
GlobalDo:
	'do' module=ID (':' scope=ID )? ( '<' arguments+=Argument (',' arguments+=Argument )* '>' )? '(' roles+=RoleInstantiation (',' roles+=RoleInstantiation)* ')' ';'
;


