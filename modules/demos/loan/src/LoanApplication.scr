//$ bin/scribblec.sh modules/demos/loan/src/LoanApplication.scr -ip modules/demos/loan/src -d modules/demos/loan/src -api BuyerBrokerSupplier Applicant
//$ javadoc -cp modules/core/target/classes';'modules/demos/target/classes modules/demos/loan/src/loan/*.java -d modules/demos/loan/javadoc

module loan.LoanApplication;

/*type <xsd> "CustomerName" from "CustomerName.xsd" as CustomerName;
type <xsd> "DateOfBirth" from "DateOfBirth.xsd" as DateOfBirth;
type <xsd> "AnnualSalary" from "AnnualSalary.xsd" as AnnualSalary;
type <xsd> "CreditRating" from "CreditRating.xsd" as CreditRating;
type <xsd> "LoanAmount" from "LoanAmount.xsd" as LoanAmount;
type <xsd> "Approval" from "Approval.xsd" as Approval;*/

type <java> "java.lang.Integer" from "rt.jar" as Int;
type <java> "java.lang.String" from "rt.jar" as String;
type <java> "java.lang.Boolean" from "rt.jar" as Bool;
 
global protocol BuyerBrokerSupplier(role Applicant, role ApplicationPortal, role LoanProcessingDept, role FinanceDept)
{
	/*applyForLoan(CustomerName, DateOfBirth, AnnualSalary, CreditRating) from Applicant to ApplicationPortal;
	checkEligibility(CustomerName, DateOfBirth, AnnualSalary, CreditRating) from ApplicationPortal to LoanProcessingDept;
	respond(Approval) from LoanProcessingDept to ApplicationPortal;*/
	applyForLoan(String, String, Int, Int) from Applicant to ApplicationPortal;
	checkEligibility(String, String, Int, Int) from ApplicationPortal to LoanProcessingDept;
	respond(Bool) from LoanProcessingDept to ApplicationPortal;

	choice at ApplicationPortal
	{ 
		// "Approval" scenario
    /*getLoanAmount(AnnualSalary) from ApplicationPortal to FinanceDept;
    sendLoanAmount(LoanAmount) from FinanceDept to ApplicationPortal;
    requestConfirmation(LoanAmount) from ApplicationPortal to Applicant;*/
		getLoanAmount(Int) from ApplicationPortal to FinanceDept;
		sendLoanAmount(Int) from FinanceDept to ApplicationPortal;
		requestConfirmation(Int) from ApplicationPortal to Applicant;        
	}
	or
	{
		// "Reject" scenario
		reject() from ApplicationPortal to FinanceDept;
		reject() from ApplicationPortal to Applicant;
	}
}


explicit global protocol BBSOriginal
(
		role Applicant, role ApplicationPortal, role LoanProcessingDept, role FinanceDept
)
{
	connect Applicant to ApplicationPortal;
	connect ApplicationPortal to LoanProcessingDept;

	applyForLoan(String, String, Int, Int) from Applicant to ApplicationPortal;
	checkEligibility(String, String, Int, Int) from ApplicationPortal to LoanProcessingDept;
	respond(Bool) from LoanProcessingDept to ApplicationPortal;

	choice at ApplicationPortal
	{ 
		// "Approval" scenario
		connect ApplicationPortal to FinanceDept;
		getLoanAmount(Int) from ApplicationPortal to FinanceDept;
		sendLoanAmount(Int) from FinanceDept to ApplicationPortal;
		requestConfirmation(Int) from ApplicationPortal to Applicant;        
	}
	or
	{
		// "Reject" scenario
		reject() from ApplicationPortal to Applicant;
	}
}
